# ===========================================
# NGINX CONFIGURATION FOR REACT SPA
# ===========================================

# PID file location
pid /tmp/nginx.pid;

# Main context
# What: Global Nginx configuration
# Why: Sets up basic Nginx settings for the entire server
# Where: Main Nginx configuration file
events {
    # What: Configures event processing
    # Why: Nginx needs to know how to handle connections
    # Where: Event processing configuration
    worker_connections 1024;
}

http {
    # What: HTTP server configuration
    # Why: Sets up how Nginx handles HTTP requests
    # Where: HTTP context configuration
    
    # Include MIME types
    # What: Tells Nginx how to handle different file types
    # Why: Browser needs to know content type (HTML, CSS, JS, etc.)
    # Where: Includes default MIME type definitions
    include /etc/nginx/mime.types;
    
    # Default MIME type
    # What: Sets default content type for unknown files
    # Why: Prevents browser from guessing file types
    # Where: Default MIME type setting
    default_type application/octet-stream;
    
    # Logging format
    # What: Defines how to log HTTP requests
    # Why: Monitoring and debugging HTTP requests
    # Where: Log format definition
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Access log
    # What: Logs all HTTP requests
    # Why: Monitoring, debugging, and analytics
    # Where: Logs to /var/log/nginx/access.log
    access_log /var/log/nginx/access.log main;
    
    # Error log
    # What: Logs Nginx errors
    # Why: Debugging server issues
    # Where: Logs to /var/log/nginx/error.log
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    # What: Enables compression for text files
    # Why: Reduces bandwidth usage and improves performance
    # Where: Compression configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Server block
    # What: Defines how to serve the React application
    # Why: Nginx needs to know how to handle requests
    # Where: Server configuration block
    server {
        # Listen on port 80
        # What: Tells Nginx to listen on port 80
        # Why: Port 80 is the standard HTTP port
        # Where: Server listening configuration
        listen 80;
        
        # Server name
        # What: Sets the server name
        # Why: Identifies this server block
        # Where: Server identification
        server_name localhost;
        
        # Root directory
        # What: Sets the root directory for serving files
        # Why: Nginx needs to know where to find the React files
        # Where: File serving root directory
        root /usr/share/nginx/html;
        
        # Index files
        # What: Sets the default file to serve
        # Why: When someone visits the root URL, serve index.html
        # Where: Default file configuration
        index index.html;
        
        # Security headers
        # What: Adds security headers to responses
        # Why: Protects against common web vulnerabilities
        # Where: HTTP response headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Static files caching
        # What: Sets cache headers for static files
        # Why: Improves performance by caching CSS, JS, images
        # Where: Location block for static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # API proxy (if needed)
        # What: Proxies API requests to backend
        # Why: React app needs to communicate with Go backend
        # Where: Location block for API requests
        location /api/ {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # React Router fallback
        # What: Serves index.html for all routes
        # Why: React Router handles client-side routing
        # Where: Catch-all location block
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Health check endpoint
        # What: Provides a health check endpoint
        # Why: Container orchestration can check if the app is healthy
        # Where: Health check location block
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
